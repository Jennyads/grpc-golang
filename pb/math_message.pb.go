// Code generated by protoc-gen-go. DO NOT EDIT.
// source: math_message.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sum struct {
	A                    float32  `protobuf:"fixed32,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    float32  `protobuf:"fixed32,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sum) Reset()         { *m = Sum{} }
func (m *Sum) String() string { return proto.CompactTextString(m) }
func (*Sum) ProtoMessage()    {}
func (*Sum) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b040cf9c3836a8, []int{0}
}

func (m *Sum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sum.Unmarshal(m, b)
}
func (m *Sum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sum.Marshal(b, m, deterministic)
}
func (m *Sum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sum.Merge(m, src)
}
func (m *Sum) XXX_Size() int {
	return xxx_messageInfo_Sum.Size(m)
}
func (m *Sum) XXX_DiscardUnknown() {
	xxx_messageInfo_Sum.DiscardUnknown(m)
}

var xxx_messageInfo_Sum proto.InternalMessageInfo

func (m *Sum) GetA() float32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Sum) GetB() float32 {
	if m != nil {
		return m.B
	}
	return 0
}

type NewSumRequest struct {
	Sum                  *Sum     `protobuf:"bytes,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewSumRequest) Reset()         { *m = NewSumRequest{} }
func (m *NewSumRequest) String() string { return proto.CompactTextString(m) }
func (*NewSumRequest) ProtoMessage()    {}
func (*NewSumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b040cf9c3836a8, []int{1}
}

func (m *NewSumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewSumRequest.Unmarshal(m, b)
}
func (m *NewSumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewSumRequest.Marshal(b, m, deterministic)
}
func (m *NewSumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewSumRequest.Merge(m, src)
}
func (m *NewSumRequest) XXX_Size() int {
	return xxx_messageInfo_NewSumRequest.Size(m)
}
func (m *NewSumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewSumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewSumRequest proto.InternalMessageInfo

func (m *NewSumRequest) GetSum() *Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

type NewSumResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewSumResponse) Reset()         { *m = NewSumResponse{} }
func (m *NewSumResponse) String() string { return proto.CompactTextString(m) }
func (*NewSumResponse) ProtoMessage()    {}
func (*NewSumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b040cf9c3836a8, []int{2}
}

func (m *NewSumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewSumResponse.Unmarshal(m, b)
}
func (m *NewSumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewSumResponse.Marshal(b, m, deterministic)
}
func (m *NewSumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewSumResponse.Merge(m, src)
}
func (m *NewSumResponse) XXX_Size() int {
	return xxx_messageInfo_NewSumResponse.Size(m)
}
func (m *NewSumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewSumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewSumResponse proto.InternalMessageInfo

func (m *NewSumResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Sum)(nil), "fullcycle.Sum")
	proto.RegisterType((*NewSumRequest)(nil), "fullcycle.NewSumRequest")
	proto.RegisterType((*NewSumResponse)(nil), "fullcycle.NewSumResponse")
}

func init() { proto.RegisterFile("math_message.proto", fileDescriptor_b4b040cf9c3836a8) }

var fileDescriptor_b4b040cf9c3836a8 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x4d, 0x2c, 0xc9,
	0x88, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x4c, 0x2b, 0xcd, 0xc9, 0x49, 0xae, 0x4c, 0xce, 0x49, 0x55, 0x52, 0xe4, 0x62, 0x0e, 0x2e, 0xcd,
	0x15, 0xe2, 0xe1, 0x62, 0x4c, 0x94, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0a, 0x62, 0x4c, 0x04, 0xf1,
	0x92, 0x24, 0x98, 0x20, 0xbc, 0x24, 0x25, 0x43, 0x2e, 0x5e, 0xbf, 0xd4, 0xf2, 0xe0, 0xd2, 0xdc,
	0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x05, 0x2e, 0xe6, 0xe2, 0xd2, 0x5c, 0xb0, 0x72,
	0x6e, 0x23, 0x3e, 0x3d, 0xb8, 0x61, 0x7a, 0x20, 0x35, 0x20, 0x29, 0x25, 0x0d, 0x2e, 0x3e, 0x98,
	0x96, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c,
	0x12, 0xa8, 0x2d, 0x50, 0x9e, 0x91, 0x37, 0x17, 0xb7, 0x6f, 0x62, 0x49, 0x46, 0x70, 0x6a, 0x51,
	0x59, 0x66, 0x72, 0xaa, 0x90, 0x0d, 0xc4, 0x39, 0x12, 0x48, 0x86, 0xa2, 0xd8, 0x2d, 0x25, 0x89,
	0x45, 0x06, 0x62, 0x85, 0x12, 0x83, 0x13, 0x4b, 0x14, 0x53, 0x41, 0x52, 0x12, 0x1b, 0xd8, 0x93,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0x35, 0x34, 0xac, 0xfa, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MathServiceClient is the client API for MathService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathServiceClient interface {
	Sum(ctx context.Context, in *NewSumRequest, opts ...grpc.CallOption) (*NewSumResponse, error)
}

type mathServiceClient struct {
	cc *grpc.ClientConn
}

func NewMathServiceClient(cc *grpc.ClientConn) MathServiceClient {
	return &mathServiceClient{cc}
}

func (c *mathServiceClient) Sum(ctx context.Context, in *NewSumRequest, opts ...grpc.CallOption) (*NewSumResponse, error) {
	out := new(NewSumResponse)
	err := c.cc.Invoke(ctx, "/fullcycle.MathService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MathServiceServer is the server API for MathService service.
type MathServiceServer interface {
	Sum(context.Context, *NewSumRequest) (*NewSumResponse, error)
}

// UnimplementedMathServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMathServiceServer struct {
}

func (*UnimplementedMathServiceServer) Sum(ctx context.Context, req *NewSumRequest) (*NewSumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}

func RegisterMathServiceServer(s *grpc.Server, srv MathServiceServer) {
	s.RegisterService(&_MathService_serviceDesc, srv)
}

func _MathService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewSumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fullcycle.MathService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Sum(ctx, req.(*NewSumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MathService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fullcycle.MathService",
	HandlerType: (*MathServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _MathService_Sum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "math_message.proto",
}
